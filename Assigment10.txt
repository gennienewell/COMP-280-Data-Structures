#include <iostream>
#include <iomanip>
#include <string>
using namespace std;


class Car
{
  
private:
        string make;
        string model;
        string color;
        int year;
        int Mileage;
        int VIN ;



public:
// Member functions definitions including constructor
Car(string ma,string mo,string co,int ye,int Mi,int VN) 
{ 
    make=ma;
    model=mo;
    color=co;
    year=ye;
    Mileage=Mi;
    VIN=VN;
     
    
}

//Added a default constructor
Car() {};

//Getters Setters
    int getVin() {
        return VIN;
    }

    void setVin(int i) {
        VIN = i;
        
    }

     string getMake() {
        return make;
    }

    void setMake(string x) {
      int size = x.length();
       if (size > 3)
          make = x;
        else
        {cout<<"Invalid Make\n";
        }
       
    }

    string getModel() {
        return model;
    }

    void setModel(string a) {
        model = a;
    }

    int getYear() {
        return year;
    }

    void setYear(int y) {
      if (y > 1970)
        year = y;
        else
        {cout<<"Invalid Year\n";
        }
    }

     int getMileage() {
        return Mileage;
    }

     void setMileage(int m) {
       if (m > 0)
         Mileage = m;
        else
        {cout<<"Invalid Mileage\n";
        }
        
        
    }

     string getColor() {
        return color;
        
    }

    void setColor(string c) {
        color = c;
    }

};

class dynStack
{
private:
        struct dynNode
        {
          Car Value;
          struct dynNode * next;
        };

        dynNode * top;
public:
    
      dynStack()
      {top =  nullptr;}

    
    void push(Car);
    void pop(Car &c);
    bool isEmpty();
    void displayList();
    int size();
};

void dynStack::push(Car c)
{
  dynNode * newNode = nullptr;
  newNode = new dynNode;
  newNode->Value = c;

  if(isEmpty())
  {
    top =  newNode;
    newNode->next = nullptr;
  }
  else
  {
    newNode->next = top;
    top = newNode;
  }
}

void dynStack::pop(Car & c)
{
  dynNode *temp = nullptr;

  if(isEmpty())
  {
    cout<<"Stack is Empty!"<<endl;
  }
  else
  {
    c = top->Value;
    temp = top->next;
    delete top;
    top = temp;

  }
}

bool dynStack::isEmpty()
{
  bool status;
  if(!top)
    status = true;
  else
    status = false;
  return status;
}

void dynStack::displayList()
{
  dynNode *nodePtr;
  nodePtr = top;
  while (nodePtr !=nullptr)
  {
    cout<<nodePtr->Value.getMake()<<" "<<nodePtr->Value.getModel()<<" "<<nodePtr->Value.getColor()<<" "<<nodePtr->Value.getYear()<<" "<<nodePtr->Value.getMileage()<<" "<<nodePtr->Value.getVin()<<endl;
    nodePtr = nodePtr->next;
  }
}

int dynStack::size()
{
  int si = 0;
  dynNode *nodePtr;
  nodePtr = top;

  while (nodePtr !=nullptr)
  {
    si++;
    nodePtr = nodePtr->next;
  }
  return si;
}


int main() {
Car car1("Porsche","911","Silver",2005,18990,1237362);
Car car2("Ford","Mustang","Red",2007,49842,7337372);
Car car3("Chevrolet","Beretta","Black",1989,90332,2873644);

dynStack stack;

stack.push(car1);
stack.push(car2);
stack.push(car3);

stack.displayList();
cout<<endl;
cout<<"The size of the Stack is "<<stack.size()<<"!"<<endl;

string answer1;
string answer2;
string answer3;
int answer4;
int answer5;
int answer6;

cout<<endl;
cout<<"Enter Car Details!"<<endl;
cout << "Type New Make?: "; // Type a description and press enter
cin>>answer1; // Get user input from the keyboard
cin.ignore();

cout<<""<<endl;
cout << "Type New Model: "; // Type a description and press enter
cin>>answer2; // Get user input from the keyboard

cout<<""<<endl;
cout << "Type New color: "; // Type a description and press enter
cin>>answer3; // Get user input from the keyboard

cout<<""<<endl;
cout << "Type New Year: "; // Type a description and press enter
cin>>answer4; // Get user input from the keyboard

cout<<""<<endl;
cout << "Type New Milage: "; // Type a description and press enter
cin>>answer5; // Get user input from the keyboard

cout<<""<<endl;
cout << "Type New Vin: "; // Type a description and press enter
cin>>answer6; // Get user input from the keyboard

Car car4(answer1,answer2,answer3,answer4,answer5,answer6);
stack.push(car4);

cout<<endl;
stack.displayList();

cout<<endl;


cout<<"After Cars Sold!"<<endl;
stack.pop(car1);
stack.pop(car2);
stack.displayList();

}